# name: test/sql/accessors.test
# description: test geography extension cell operations
# group: [geography]

# Require statement will ensure this test is run with this extension loaded
require geography

# IsEmpty
query I
SELECT s2_isempty('POINT EMPTY'::GEOGRAPHY)
----
true

query I
SELECT s2_isempty('POINT (0 1)'::GEOGRAPHY)
----
false

# Validation
query I
SELECT s2_is_valid(s2_geogfromtext_novalidate('LINESTRING (0 0, 1 1)'));
----
true

query I
SELECT s2_is_valid(s2_geogfromtext_novalidate('LINESTRING (0 0, 0 0, 1 1)'));
----
false

query I
SELECT s2_is_valid_reason(s2_geogfromtext_novalidate('LINESTRING (0 0, 1 1)')) = '';
----
true

query I
SELECT s2_is_valid_reason(s2_geogfromtext_novalidate('LINESTRING (0 0, 0 0, 1 1)'));
----
Vertices 0 and 1 are identical

# Area
query I
SELECT s2_area('POINT EMPTY'::GEOGRAPHY)
----
0

query I
SELECT s2_area('POINT (0 1)'::GEOGRAPHY)
----
0

query I
SELECT s2_area('LINESTRING (0 1, 2 3)'::GEOGRAPHY)
----
0

query I
SELECT s2_area('POLYGON ((0 0, 0 1, 1 0, 0 0))'::GEOGRAPHY).round()
----
6182489131

# Perimeter
query I
SELECT s2_perimeter('POINT EMPTY'::GEOGRAPHY)
----
0

query I
SELECT s2_perimeter('POINT (0 1)'::GEOGRAPHY)
----
0

query I
SELECT s2_perimeter('LINESTRING (0 1, 2 3)'::GEOGRAPHY)
----
0

query I
SELECT s2_perimeter('POLYGON ((0 0, 0 1, 1 0, 0 0))'::GEOGRAPHY).round()
----
379640

# Length
query I
SELECT s2_length('POINT EMPTY'::GEOGRAPHY)
----
0

query I
SELECT s2_length('POINT (0 1)'::GEOGRAPHY)
----
0

query I
SELECT s2_length('POLYGON ((0 0, 0 1, 1 0, 0 0))'::GEOGRAPHY)
----
0

query I
SELECT s2_length('LINESTRING (0 1, 2 3)'::GEOGRAPHY).round()
----
314403

query I
SELECT s2_x('POINT EMPTY'::GEOGRAPHY)
----
NaN

query I
SELECT s2_x('LINESTRING (0 1, 1 2)'::GEOGRAPHY)
----
NaN

query I
SELECT s2_x('POINT (-64 45)'::GEOGRAPHY).round()
----
-64

query I
SELECT s2_y('POINT (-64 45)'::GEOGRAPHY).round()
----
45

query I
SELECT s2_x('POINT (-64 45)'::GEOGRAPHY::S2_CELL_CENTER).round()
----
-64

query I
SELECT s2_y('POINT (-64 45)'::GEOGRAPHY::S2_CELL_CENTER).round()
----
45
